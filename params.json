{"name":"Pyeventbus","tagline":"This is for making your project process event easilly.","body":"Pyeventbus\r\n====================\r\n\r\n\r\nPyeventbus is designed to process the traditional event more easilly.You need only write your event message and your\r\nlisteners and post the event at the right time. The event message will be process well.The Pyeventbus support simple \r\nsynchronous and asynchronous event handling.\r\n\r\nLicense: MIT (see LICENSE)\r\n\r\nInstallation and Dependencies\r\n-----------------------------\r\n\r\nInstall Pyeventbus \r\n\r\ngit clone https://github.com/xsank/Pyeventbus.git\r\n\r\npython setup.py install\r\n\r\n\r\nExample\r\n-------\r\n\r\n.. code-block:: python\r\n\r\n    from eventbus.eventbus import EventBus\r\n    #now create a eventbus,the default pool size is 4 and isdaemon is true\r\n    eventbus=EventBus()\r\n    \r\n.. code-block:: python\r\n\r\n    #add the listener to eventbus so it will use the right handler to process the event\r\n    eventbus.register(Listener())\r\n    \r\n    \r\n.. code-block:: python\r\n\r\n    #now the event message were sent,eventbus will process\r\n    #this is for the async post\r\n    eventbus.async_post(GreetEvent())\r\n\r\n    #this is for the sync post\r\n    eventbus.post(GreetEvent())\r\n    \r\n    \r\n.. code-block:: python\r\n\r\n    #remove the listener\r\n    eventbus.unregister(Listener())\r\n\r\n\r\n.. code-block:: python\r\n\r\n    #destroy the eventbus\r\n    eventbus.destroy()\r\n    \r\n    \r\n\r\nInformation\r\n-----------\r\n1.Your event must inherit from the Event\r\n\r\n2.Your listener must inherit from the Listener\r\n\r\n3.When you write your own listeners,You would better note the event message type so the eventbus will use the right handler to process it.\r\n    \r\nYou can see the complete example in the example directory.\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}